Installation instructions
=========================


.. attention:: The long list of requirements may seem daunting but on many
               standard linux distributions they should be relatively easy to
               fulfill. Here it is assumed that Linux is used.

This package requires:

Core requirements
-----------------

* Python 2.7.x.
* A recent version of the netCDF4 library.
* ESGF certificates.

Before proceeding further, are you willing to use a 3rd party Linux Distribution (Free for Academic Use)?

* If yes, follow the instructions :ref:`install-distro`

* If no, follow the instructions :ref:`install-source`

At this point in the installation, it is assumed that you have a working python distribution with
the netCDF4 python package compiled.

Installing this package: `cdb_query`
------------------------------------
This package can be installed with ``pip``::

    $ pip install cdb_query

.. warning:: If you are using a virtual environment, you must always ``source $HOME/python/bin/activate`` BEFORE
             using ``cdb_query``. If you are using Anaconda, you must activate it (see :ref:`install-distro`).


Obtaining ESGF certificates
---------------------------

This package allows you to obtain and manage ESGF certificates transparently. The only
actions a user should take is 

1. Register at http://badc.nerc.ac.uk/reg/user_register_info.html. 
   When registering, you will create a `password` and `username`.

2. Go to http://badc.nerc.ac.uk/mybadc. Login using your `username` and `password`.
   Your `openid` will be listed here. You will receive an email with instructions. Disregard it for the moment.

3. Go to https://esgf-data1.ceda.ac.uk/esg-orp/home.htm and login with your `openid` using your `password`.

4. Go to https://esgf-data1.ceda.ac.uk/esg-orp/registration-request.htm?resource=http%3A%2F%2Fesgf-data1.ceda.ac.uk%2Fthredds%2FfileServer%2Fesg_testroot%2Fregister%2Fcmip5_research.nc.
   Your browser will likely ask you to trust some certificates. CLICK `ALWAYS ALLOW`. If you don't do this, it won't work.

5. Register for `CMIP5 Research`. You do not need to download data.

6. Run the following command::

        $ cdb_query CMIP5 certificates

7. Edit your ``.bash_profile``. Add these two lines to your ``.bash_profile``::

    export X509_CERT_DIR=$HOME/.esg4/certificates
    export X509_USER_PROXY=$HOME/.esg4/credentials.pem

   and source your ``.bash_profile``::

    $ source ~/.bash_profile

Alternatively, if you would like to use another registering service, please follow the instructions on how to install the :ref:`install-certs`


Secondary tools used in the recipes
-----------------------------------

netCDF Operators (NCO)
^^^^^^^^^^^^^^^^^^^^^^
Some of the recipes make use of `NCO`. These recipes were tested using version 4.4.3 linked against the
netcdf libraries built from `anaconda` and from :ref:`install-source`. Please consult the project's webpage for information on how to install: http://nco.sourceforge.net/.

These recipes were tested using the `NCO` built using the BASH script found in :ref:`install-nco`

Climate Data Operators (CDO)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The netCDF4 files generated by `cdb_query` are not compatible with `CDO`. `NCO` can be used to extract variables and
remove the hierarchical structure. The retrieved data will then be compatible with `CDO`. With all the installed libraries,
`CDO` is relatively easy to install.


JASPER
""""""
You will need to first install `jasper`::

    $ wget http://www.ece.uvic.ca/~frodo/jasper/software/jasper-1.900.1.zip
    $ unzip jasper-1.900.1.zip
    $ cd jasper-1.900.1
    $ ./configure --with-pic --prefix=$HOME/local/jasper-1.900.1
    $ make
    $ make install

PROJ
""""
Next, you will need `proj`::
    
    $ wget http://download.osgeo.org/proj/proj-4.8.0.tar.gz
    $ tar xvfz proj-4.8.0.tar.gz
    $ cd proj-4.8.0
    $ ./configure --without-jni --prefix=$HOME/local/proj-4.8.0
    $ make check
    $ make install

.. 
    GRIB-API
    """"""""
    Then you will need ``grib-api``::

        $ wget https://software.ecmwf.int/wiki/download/attachments/3473437/grib_api-1.11.0.tar.gz
        $ tar xvfz grib_api-1.11.0.tar.gz
        $ cd grib_api-1.11.0
        $ ./configure --with-netcdf=$HOME/anaconda/ \
                      --with-jasper=$HOME/local/jasper-1.900.1/ \
                      --prefix=$HOME/local/grib_api-1.11.0
        $ make check
        $ make install

    It is OK if the test ``tigge.sh`` FAIL. This will not prevent you from having a working `CDO`.

CDO
"""

Finally, you are ready to install `CDO`::

    $ wget --no-check-certificate https://code.zmaw.de/attachments/download/7220/cdo-1.6.3.tar.gz
    $ tar xvfz cdo-1.6.3.tar.gz
    $ cd cdo-1.6.3
    $ ./configure --prefix=$HOME/local/cdo-1.6.3 \
                  --with-proj=$HOME/local/proj-4.8.0 \
                  --with-jasper=$HOME/local/jasper-1.900.1 \
                  --with-netcdf=$HOME/anaconda/  \
                  --with-hdf5=$HOME/anaconda/ \
                  --with-zlib=$HOME/anaconda/ \
                  -enable-cgribex=no CFLAGS=-DHAVE_LIBNC_DAP
    $ make 
    $ make install

This installation installs `CDO` in ``$HOME/local/cdo-1.6.3/bin`` and this directory should be added to your path.

You can check that everything was done ok::
    
    $ cdo -V
    Climate Data Operators version 1.6.3 (http://code.zmaw.de/projects/cdo)
    Compiler: gcc -std=gnu99 -DHAVE_LIBNC_DAP -pthread
    version: gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-54)
    Compiled: (x86_64-unknown-linux-gnu)
    Features: PTHREADS NC4 OPeNDAP SZ Z JASPER UDUNITS2 PROJ.4
    Libraries: proj/4.8
    Filetypes: srv ext ieg grb grb2 nc nc2 nc4 nc4c 
    CDI library version : 1.6.3 
    GRIB_API library version : 1.11.0
    netCDF library version : 4.3.1-rc2 
    HDF5 library version : 1.8.11
    SERVICE library version : 1.3.1 
    EXTRA library version : 1.3.1 
    IEG library version : 1.3.1 
    FILE library version : 1.8.2

The `Features` line indicates that netCDF4 files are accepted, OPeNDAP links can be read and that
compressed variables can be created (SZ, Z).
